version: "3.9"

services:
  #  api:
  #    container_name: api_dev
  #    image: api:latest
  #    build:
  #      context: .
  #      dockerfile: Dockerfile
  #    environment:
  #      DB_HOST: "postgres_dev"
  #      DB_PASSWORD: 'password'
  #      DB_USERNAME: 'user'
  #      DB_NAME: 'db'
  #      DB_PORT: 5432
  #      REDIS_HOST: redis
  #      REDIS_PORT: 6379
  #      REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
  #    ports:
  #      - "3000:3000"
  #    networks:
  #      - default
  #    volumes:
  #      - /api/src:/usr/app/src
  #    depends_on:
  #      - postgres
  #      - redis
  #    links:
  #      - postgres
  #    restart: on-failure
  #  live-reload:
  #    image: apogiatzis/livereloading
  #    container_name: live-reload
  #    privileged: true
  #    environment:
  #      - RELOAD_DELAY=1
  #      - RELOAD_CONTAINER=api_dev
  #    volumes:
  #      - /var/run/docker.sock:/var/run/docker.sock
  #      - /api/src:/usr/app/src
  mongodb:
    image: mongo:5.0.0
    container_name: mongodb_dev
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: tom
    networks:
      - default
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
  postgres:
    container_name: postgres_dev
    image: postgres:14
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    ports:
      - "5432:5432"
    expose:
      - "5432"
    networks:
      - default
    volumes:
      - postgres:/data/database
    restart: unless-stopped
  redis:
    container_name: redis_dev
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - redis:/data
    networks:
      - default
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: dev_rabbitmq
    restart: "always"
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq/
    networks:
      - default
    environment:
      - RABBITMQ_DEFAULT_PASS=password
      - RABBITMQ_DEFAULT_USER=user
networks:
  default:

volumes:
  postgres:
  redis:
  rabbitmq_data:
  rabbitmq_log: